<center>
![MDDriver logo](../images/mddriverlogo.png "MDDriver logo")
</center>
Introduction
============

MDDriver is a library allowing user to easily couple
molecular visualisation tools with simulation code through
network, to do interactive molecular dynamics, by visualizing
simulation results and driving simulation in interactive time.

Installation
============

Tools required
--------------
- CMake [ http://www.cmake.org]( http://www.cmake.org)

Optional tools required (for testing using MDDriver with GROMACS
--------------------------------------------------------

- a patched version of GROMACS (cvs date 2007-12-08 for parallele or 4.0.5), (see [http://www.gromacs.org/](http://www.gromacs.org/) to know what is GROMACS)
- the fftw3 library for compiling GROMACS
- the VMD visualization tool (see further) (see [http://www.ks.uiuc.edu/Research/vmd/](http://www.ks.uiuc.edu/Research/vmd/) to know what is VMD)

Compiling and Installing MDDriver (for MacOSX and linux)
--------------------------------------------------------
1. Get MDDriver

    We advice you to get the last version on github, and put it in the ${MDDRIVER\_SRC} directory:

        git clone https://github.com/LBT-CNRS/MDDriver ${MDDRIVER_SRC}

    This creates the mddriver source directory. In the next parts, we named MDDRIVER\_SRC the absolute
    path of this source directory (MDDRIVER\_SRC=/home/martin/mddriver for example).

2. Compile and installing MDDriver

        mkdir MDDriverBuild
        cd MDDriverBuild
        cmake ${MDDRIVER_SRC}
        make install (you have to be root)

    This will install in the default install prefix (/usr/local, be carreful to be root) the MDDriver directory.   You can also install MDDriver on your own
    install prefix (for example /home/martin) using this way :

        mkdir MDDriverBuild
        cd MDDriverBuild
        cmake ${MDDRIVER_SRC} -DCMAKE_INSTALL_PREFIX:PATH=/home/martin
        make install

3. Be carrefull to source the MDDriver settings script located in the bin of the MDDriver install directory

        source MDDriver-config.sh (for bash)
        source MDDriver-config.csh (for csh)

    You must have the environment variables MDDDRIVER\_PATH, MDDRIVER\_DATA\_PATH, MDDRIVER\_DIR, MDDDRIVER\_LIBRARY\_DIR, and MDDDRIVER\_INCLUDE\_DIR set to continue.


Testing MDDriver
--------------------------------------------------------

    Before using MDDriver, you have to test it :

        cd ${MDDDRIVER_PATH}
        ./servertest

   and in another console :

       ./clienttest

You should see energy and coords exchanging by the server and the client.

Installing and using MDDriver for interactive simulation with VMD
================================================

Nothing to do as MDDriver is compatible with IMD network protocol (Interactive Molecular Dynamic) use by VMD and NAMD

Installing MDDriver to use it with UnityMol
================================================



Launching GROMACS simulation with MDDdriver features (VMD or UnityMol)
================================================

* Download VMD, http://www.ks.uiuc.edu/Research/vmd.
* Go to the data directory and go to and example directory:

        cd ${MDDRIVER_DATA_PATH}/02_peptide_200

* First you have to convert the molecular description of the molecular system in the pdb file model.pdb and preparing input and output for Gromacs (be carreful to use the pdb2gmx and grompp executable compiled with MDDriver) :

        pdb2gmx -f model.pdb -o model.gro -p model.top
        mkdir output
        grompp -f imd.mdp -c model.gro -p model.top -o model.tpr

* Then you run simulation, giving Gromacs parameter for MDDriver. The IMDfreq is the number of timesteps between two MDDriver exchanges, IMDwait set to 1 means that simulation will wait for client connection before starting,
  IMDport the port on which data wil be sended and IMDmsg the log level, from 0 for no messages to 3 for verbose log (be carreful to use the mdrun executable compiled with MDDriver).

        mdrun -IMDfreq 1 -IMDwait 1 -IMDport 3000 -IMDmsg 1 -s model.tpr -x output/imd -deffnm output/imd

Lauching VMD to interact with simulation
================================================
Lauching VMD.

* Open the description of the molecular system in the pdb file model.pdb you have used for simulation :

<center>
![Open PDB file](../images/vmd1.png "Open PDB file")
</center>

* Connect VMD to the simulation, specifying host and port on which simulation was launched and click connect.
<center>
![Link with simulation](../images/vmd2.png "Link with simulation")
</center>

Interact with the scene, using VMD tools:
---------------------------------------------------
In a low VR Context (Mouse) go to Mouse>Force, choose a selection mode and pick in the rendering window. For a higher VR context (with haptic device), first lauch VRPN server managing your VR device, then define a .vmdsensor file to configure your device, and finally use the Graphics>Tools menu.

Lauching Unity to interact with simulation
================================================




Copyright and License
================================================
This program is under the CeCill licence [href="http://www.cecill.info/index.en.html](href="http://www.cecill.info/index.en.html), which is compatible with GPL licence.
